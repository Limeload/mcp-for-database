name: Hacktoberfest Auto-labeling

on:
  issues:
    types: [opened, edited]
  pull_request:
    types: [opened, edited]

jobs:
  auto-label:
    runs-on: ubuntu-latest
    permissions:
      issues: write
      pull-requests: write
    
    steps:
      - name: Auto-label Issues and PRs
        uses: actions/github-script@v7
        with:
          script: |
            const { context } = require('@actions/github');
            const { owner, repo, number } = context.issue;
            
            // Get the issue or PR
            const isPR = context.eventName === 'pull_request';
            const item = isPR ? context.payload.pull_request : context.payload.issue;
            
            // Check if it's a Hacktoberfest contribution
            const title = item.title.toLowerCase();
            const body = (item.body || '').toLowerCase();
            const hacktoberfestKeywords = [
              'hacktoberfest',
              'hacktober',
              'october',
              'contribution',
              'good first issue',
              'beginner',
              'newcomer'
            ];
            
            const isHacktoberfest = hacktoberfestKeywords.some(keyword => 
              title.includes(keyword) || body.includes(keyword)
            );
            
            if (isHacktoberfest) {
              // Add hacktoberfest label
              await github.rest.issues.addLabels({
                owner,
                repo,
                issue_number: number,
                labels: ['hacktoberfest']
              });
              
              console.log(`Added hacktoberfest label to ${isPR ? 'PR' : 'issue'} #${number}`);
            }
            
            // Auto-label based on content
            const labels = [];
            
            // Bug detection
            if (title.includes('[bug]') || title.includes('bug:') || 
                body.includes('error') || body.includes('issue') || 
                body.includes('problem') || body.includes('fix')) {
              labels.push('bug');
            }
            
            // Feature detection
            if (title.includes('[feature]') || title.includes('feature:') || 
                title.includes('[feat]') || title.includes('feat:') ||
                body.includes('enhancement') || body.includes('improvement') ||
                body.includes('new feature')) {
              labels.push('enhancement');
            }
            
            // Documentation detection
            if (title.includes('[docs]') || title.includes('docs:') ||
                title.includes('[documentation]') || title.includes('documentation:') ||
                body.includes('documentation') || body.includes('readme') ||
                body.includes('docs')) {
              labels.push('documentation');
            }
            
            // Good first issue detection
            if (title.includes('[good first issue]') || 
                body.includes('good first issue') || 
                body.includes('beginner') || 
                body.includes('newcomer') ||
                body.includes('easy') ||
                body.includes('simple')) {
              labels.push('good first issue');
            }
            
            // Add labels if any were detected
            if (labels.length > 0) {
              await github.rest.issues.addLabels({
                owner,
                repo,
                issue_number: number,
                labels: labels
              });
              
              console.log(`Added labels ${labels.join(', ')} to ${isPR ? 'PR' : 'issue'} #${number}`);
            }
